name: Release

env:
  # deploymentNameBuild: ${{ github.event.inputs.deploymentNameBuild }}
  # location: ${{ github.event.inputs.location }}
  resourceGroup: '${{ secrets.PREFIX }}-rg'
  releaseBicepPath: './deploy/release/main.bicep'
  deploymentNameRelease: '${{ secrets.PREFIX }}release'

on:
  # Only trigger, when the build workflow succeeded
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  #   inputs:
  #     deploymentNameBuild:
  #       description: 'Deployment Name Build'     
  #       required: true
  #     location:
  #       description: 'Location for deployment'     
  #       required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # LOGIN TO AZURE. THE LOGGED IN SESSION IS ACTIVE TILL A LOGOUT ACTION IS CALLED (OR THE JOB FINISHED)
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true 

      # SET CORRECT AZURE CONTEXT
      - name: 'Set context to subscription'
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-AzContext -Subscription '${{ secrets.AZURE_SUBSCRIPTION_ID }}'
          azPSVersion: "latest"

      - name: 'Retrieve API Management Instance & Application Insights Name'
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $apim = Get-AzApiManagement -ResourceGroupName '${{ env.resourceGroup }}' | Select-Object -Property Name
            $appInsights = Get-AzApplicationInsights -ResourceGroupName '${{ env.resourceGroup }}' | Select-Object -Property Name
            $apimName = $apim.Name
            $appInsightsName = $appInsights.Name
            echo "APIM_NAME=$apimName" >> $Env:GITHUB_ENV
            echo "APPINSIGHTS_NAME=$appInsightsName" >> $Env:GITHUB_ENV
          azPSVersion: "latest"

      - name: 'Release API definition to API Management'
        uses: azure/powershell@v1
        with:
          inlineScript: |
            New-AzResourceGroupDeployment -Name '${{ env.deploymentNameRelease }}' -ResourceGroupName '${{ env.resourceGroup }}' -apimName '${{ env.APIM_NAME }}' -appInsightsName '${{ env.APPINSIGHTS_NAME }}' -TemplateFile '${{ env.releaseBicepPath }}'
          azPSVersion: "latest"

      # LOGOUT
      - name: logout
        run: |
          az logout
